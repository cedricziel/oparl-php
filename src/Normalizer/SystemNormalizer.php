<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace OParl\Normalizer;

use Jane\JsonSchemaRuntime\Normalizer\CheckArray;
use Jane\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class SystemNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use CheckArray;
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (isset($data['$ref'])) {
            return new Reference($data['$ref'], $context['document-origin']);
        }
        if (isset($data['$recursiveRef'])) {
            return new Reference($data['$recursiveRef'], $context['document-origin']);
        }
        $object = new \OParl\Model\System();
        if (\array_key_exists('type', $data)) {
            $object->setType($data['type']);
        }
        if (\array_key_exists('oparlVersion', $data)) {
            $object->setOparlVersion($data['oparlVersion']);
        }
        if (\array_key_exists('otherOparlVersions', $data)) {
            $values = [];
            foreach ($data['otherOparlVersions'] as $value) {
                $values[] = $value;
            }
            $object->setOtherOparlVersions($values);
        }
        if (\array_key_exists('body', $data)) {
            $object->setBody($data['body']);
        }
        if (\array_key_exists('contactEmail', $data)) {
            $object->setContactEmail($data['contactEmail']);
        }
        if (\array_key_exists('contactName', $data)) {
            $object->setContactName($data['contactName']);
        }
        if (\array_key_exists('website', $data)) {
            $object->setWebsite($data['website']);
        }
        if (\array_key_exists('vendor', $data)) {
            $object->setVendor($data['vendor']);
        }
        if (\array_key_exists('product', $data)) {
            $object->setProduct($data['product']);
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = [];
        if (null !== $object->getType()) {
            $data['type'] = $object->getType();
        }
        if (null !== $object->getOparlVersion()) {
            $data['oparlVersion'] = $object->getOparlVersion();
        }
        if (null !== $object->getOtherOparlVersions()) {
            $values = [];
            foreach ($object->getOtherOparlVersions() as $value) {
                $values[] = $value;
            }
            $data['otherOparlVersions'] = $values;
        }
        if (null !== $object->getBody()) {
            $data['body'] = $object->getBody();
        }
        if (null !== $object->getContactEmail()) {
            $data['contactEmail'] = $object->getContactEmail();
        }
        if (null !== $object->getContactName()) {
            $data['contactName'] = $object->getContactName();
        }
        if (null !== $object->getWebsite()) {
            $data['website'] = $object->getWebsite();
        }
        if (null !== $object->getVendor()) {
            $data['vendor'] = $object->getVendor();
        }
        if (null !== $object->getProduct()) {
            $data['product'] = $object->getProduct();
        }

        return $data;
    }

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'OParl\\Model\\System';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \OParl\Model\System;
    }
}
