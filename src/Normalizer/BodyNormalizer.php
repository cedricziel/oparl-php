<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace OParl\Normalizer;

use Jane\JsonSchemaRuntime\Normalizer\CheckArray;
use Jane\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class BodyNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'OParl\\Model\\Body';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \OParl\Model\Body;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (isset($data['$ref'])) {
            return new Reference($data['$ref'], $context['document-origin']);
        }
        if (isset($data['$recursiveRef'])) {
            return new Reference($data['$recursiveRef'], $context['document-origin']);
        }
        $object = new \OParl\Model\Body();
        if (\array_key_exists('type', $data)) {
            $object->setType($data['type']);
        }
        if (\array_key_exists('licenseValidSince', $data)) {
            $object->setLicenseValidSince(\DateTime::createFromFormat('Y-m-d\\TH:i:sP', $data['licenseValidSince']));
        }
        if (\array_key_exists('oparlSince', $data)) {
            $object->setOparlSince(\DateTime::createFromFormat('Y-m-d\\TH:i:sP', $data['oparlSince']));
        }
        if (\array_key_exists('ags', $data)) {
            $object->setAgs($data['ags']);
        }
        if (\array_key_exists('rgs', $data)) {
            $object->setRgs($data['rgs']);
        }
        if (\array_key_exists('equivalent', $data)) {
            $values = [];
            foreach ($data['equivalent'] as $value) {
                $values[] = $value;
            }
            $object->setEquivalent($values);
        }
        if (\array_key_exists('contactEmail', $data)) {
            $object->setContactEmail($data['contactEmail']);
        }
        if (\array_key_exists('contactName', $data)) {
            $object->setContactName($data['contactName']);
        }
        if (\array_key_exists('organization', $data)) {
            $value_1 = $data['organization'];
            if (is_array($data['organization']) && $this->isOnlyNumericKeys($data['organization'])) {
                $values_1 = [];
                foreach ($data['organization'] as $value_2) {
                    $values_1[] = $value_2;
                }
                $value_1 = $values_1;
            } elseif (is_string($data['organization'])) {
                $value_1 = $data['organization'];
            }
            $object->setOrganization($value_1);
        }
        if (\array_key_exists('person', $data)) {
            $value_3 = $data['person'];
            if (is_array($data['person']) && $this->isOnlyNumericKeys($data['person'])) {
                $values_2 = [];
                foreach ($data['person'] as $value_4) {
                    $values_2[] = $value_4;
                }
                $value_3 = $values_2;
            } elseif (is_string($data['person'])) {
                $value_3 = $data['person'];
            }
            $object->setPerson($value_3);
        }
        if (\array_key_exists('meeting', $data)) {
            $value_5 = $data['meeting'];
            if (is_array($data['meeting']) && $this->isOnlyNumericKeys($data['meeting'])) {
                $values_3 = [];
                foreach ($data['meeting'] as $value_6) {
                    $values_3[] = $value_6;
                }
                $value_5 = $values_3;
            } elseif (is_string($data['meeting'])) {
                $value_5 = $data['meeting'];
            }
            $object->setMeeting($value_5);
        }
        if (\array_key_exists('paper', $data)) {
            $value_7 = $data['paper'];
            if (is_array($data['paper']) && $this->isOnlyNumericKeys($data['paper'])) {
                $values_4 = [];
                foreach ($data['paper'] as $value_8) {
                    $values_4[] = $value_8;
                }
                $value_7 = $values_4;
            } elseif (is_string($data['paper'])) {
                $value_7 = $data['paper'];
            }
            $object->setPaper($value_7);
        }
        if (\array_key_exists('legislativeTerm', $data)) {
            $values_5 = [];
            foreach ($data['legislativeTerm'] as $value_9) {
                $values_5[] = $this->denormalizer->denormalize($value_9, 'OParl\\Model\\LegislativeTerm', 'json', $context);
            }
            $object->setLegislativeTerm($values_5);
        }
        if (\array_key_exists('agendaItem', $data)) {
            $value_10 = $data['agendaItem'];
            if (is_array($data['agendaItem']) && $this->isOnlyNumericKeys($data['agendaItem'])) {
                $values_6 = [];
                foreach ($data['agendaItem'] as $value_11) {
                    $values_6[] = $value_11;
                }
                $value_10 = $values_6;
            } elseif (is_string($data['agendaItem'])) {
                $value_10 = $data['agendaItem'];
            }
            $object->setAgendaItem($value_10);
        }
        if (\array_key_exists('consultation', $data)) {
            $value_12 = $data['consultation'];
            if (is_array($data['consultation']) && $this->isOnlyNumericKeys($data['consultation'])) {
                $values_7 = [];
                foreach ($data['consultation'] as $value_13) {
                    $values_7[] = $value_13;
                }
                $value_12 = $values_7;
            } elseif (is_string($data['consultation'])) {
                $value_12 = $data['consultation'];
            }
            $object->setConsultation($value_12);
        }
        if (\array_key_exists('file', $data)) {
            $value_14 = $data['file'];
            if (is_array($data['file']) && $this->isOnlyNumericKeys($data['file'])) {
                $values_8 = [];
                foreach ($data['file'] as $value_15) {
                    $values_8[] = $value_15;
                }
                $value_14 = $values_8;
            } elseif (is_string($data['file'])) {
                $value_14 = $data['file'];
            }
            $object->setFile($value_14);
        }
        if (\array_key_exists('locationList', $data)) {
            $value_16 = $data['locationList'];
            if (is_array($data['locationList']) && $this->isOnlyNumericKeys($data['locationList'])) {
                $values_9 = [];
                foreach ($data['locationList'] as $value_17) {
                    $values_9[] = $value_17;
                }
                $value_16 = $values_9;
            } elseif (is_string($data['locationList'])) {
                $value_16 = $data['locationList'];
            }
            $object->setLocationList($value_16);
        }
        if (\array_key_exists('legislativeTermList', $data)) {
            $value_18 = $data['legislativeTermList'];
            if (is_array($data['legislativeTermList']) && $this->isOnlyNumericKeys($data['legislativeTermList'])) {
                $values_10 = [];
                foreach ($data['legislativeTermList'] as $value_19) {
                    $values_10[] = $value_19;
                }
                $value_18 = $values_10;
            } elseif (is_string($data['legislativeTermList'])) {
                $value_18 = $data['legislativeTermList'];
            }
            $object->setLegislativeTermList($value_18);
        }
        if (\array_key_exists('membership', $data)) {
            $value_20 = $data['membership'];
            if (is_array($data['membership']) && $this->isOnlyNumericKeys($data['membership'])) {
                $values_11 = [];
                foreach ($data['membership'] as $value_21) {
                    $values_11[] = $value_21;
                }
                $value_20 = $values_11;
            } elseif (is_string($data['membership'])) {
                $value_20 = $data['membership'];
            }
            $object->setMembership($value_20);
        }
        if (\array_key_exists('classification', $data)) {
            $object->setClassification($data['classification']);
        }
        if (\array_key_exists('location', $data)) {
            $object->setLocation($this->denormalizer->denormalize($data['location'], 'OParl\\Model\\Location', 'json', $context));
        }
        if (\array_key_exists('id', $data)) {
            $object->setId($data['id']);
        }
        if (\array_key_exists('name', $data)) {
            $object->setName($data['name']);
        }
        if (\array_key_exists('shortName', $data) && $data['shortName'] !== null) {
            $value_22 = $data['shortName'];
            if (is_string($data['shortName'])) {
                $value_22 = $data['shortName'];
            } elseif (is_null($data['shortName'])) {
                $value_22 = $data['shortName'];
            }
            $object->setShortName($value_22);
        } elseif (\array_key_exists('shortName', $data) && $data['shortName'] === null) {
            $object->setShortName(null);
        }
        if (\array_key_exists('license', $data) && $data['license'] !== null) {
            $value_23 = $data['license'];
            if (is_string($data['license'])) {
                $value_23 = $data['license'];
            } elseif (is_null($data['license'])) {
                $value_23 = $data['license'];
            }
            $object->setLicense($value_23);
        } elseif (\array_key_exists('license', $data) && $data['license'] === null) {
            $object->setLicense(null);
        }
        if (\array_key_exists('keyword', $data)) {
            $values_12 = [];
            foreach ($data['keyword'] as $value_24) {
                $values_12[] = $value_24;
            }
            $object->setKeyword($values_12);
        }
        if (\array_key_exists('web', $data) && $data['web'] !== null) {
            $value_25 = $data['web'];
            if (is_string($data['web'])) {
                $value_25 = $data['web'];
            } elseif (is_null($data['web'])) {
                $value_25 = $data['web'];
            }
            $object->setWeb($value_25);
        } elseif (\array_key_exists('web', $data) && $data['web'] === null) {
            $object->setWeb(null);
        }
        if (\array_key_exists('deleted', $data)) {
            $object->setDeleted($data['deleted']);
        }
        if (\array_key_exists('created', $data)) {
            $object->setCreated(\DateTime::createFromFormat('Y-m-d\\TH:i:sP', $data['created']));
        }
        if (\array_key_exists('modified', $data)) {
            $object->setModified(\DateTime::createFromFormat('Y-m-d\\TH:i:sP', $data['modified']));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = [];
        if (null !== $object->getType()) {
            $data['type'] = $object->getType();
        }
        if (null !== $object->getLicenseValidSince()) {
            $data['licenseValidSince'] = $object->getLicenseValidSince()->format('Y-m-d\\TH:i:sP');
        }
        if (null !== $object->getOparlSince()) {
            $data['oparlSince'] = $object->getOparlSince()->format('Y-m-d\\TH:i:sP');
        }
        if (null !== $object->getAgs()) {
            $data['ags'] = $object->getAgs();
        }
        if (null !== $object->getRgs()) {
            $data['rgs'] = $object->getRgs();
        }
        if (null !== $object->getEquivalent()) {
            $values = [];
            foreach ($object->getEquivalent() as $value) {
                $values[] = $value;
            }
            $data['equivalent'] = $values;
        }
        if (null !== $object->getContactEmail()) {
            $data['contactEmail'] = $object->getContactEmail();
        }
        if (null !== $object->getContactName()) {
            $data['contactName'] = $object->getContactName();
        }
        if (null !== $object->getOrganization()) {
            $value_1 = $object->getOrganization();
            if (is_array($object->getOrganization())) {
                $values_1 = [];
                foreach ($object->getOrganization() as $value_2) {
                    $values_1[] = $value_2;
                }
                $value_1 = $values_1;
            } elseif (is_string($object->getOrganization())) {
                $value_1 = $object->getOrganization();
            }
            $data['organization'] = $value_1;
        }
        if (null !== $object->getPerson()) {
            $value_3 = $object->getPerson();
            if (is_array($object->getPerson())) {
                $values_2 = [];
                foreach ($object->getPerson() as $value_4) {
                    $values_2[] = $value_4;
                }
                $value_3 = $values_2;
            } elseif (is_string($object->getPerson())) {
                $value_3 = $object->getPerson();
            }
            $data['person'] = $value_3;
        }
        if (null !== $object->getMeeting()) {
            $value_5 = $object->getMeeting();
            if (is_array($object->getMeeting())) {
                $values_3 = [];
                foreach ($object->getMeeting() as $value_6) {
                    $values_3[] = $value_6;
                }
                $value_5 = $values_3;
            } elseif (is_string($object->getMeeting())) {
                $value_5 = $object->getMeeting();
            }
            $data['meeting'] = $value_5;
        }
        if (null !== $object->getPaper()) {
            $value_7 = $object->getPaper();
            if (is_array($object->getPaper())) {
                $values_4 = [];
                foreach ($object->getPaper() as $value_8) {
                    $values_4[] = $value_8;
                }
                $value_7 = $values_4;
            } elseif (is_string($object->getPaper())) {
                $value_7 = $object->getPaper();
            }
            $data['paper'] = $value_7;
        }
        if (null !== $object->getLegislativeTerm()) {
            $values_5 = [];
            foreach ($object->getLegislativeTerm() as $value_9) {
                $values_5[] = $this->normalizer->normalize($value_9, 'json', $context);
            }
            $data['legislativeTerm'] = $values_5;
        }
        if (null !== $object->getAgendaItem()) {
            $value_10 = $object->getAgendaItem();
            if (is_array($object->getAgendaItem())) {
                $values_6 = [];
                foreach ($object->getAgendaItem() as $value_11) {
                    $values_6[] = $value_11;
                }
                $value_10 = $values_6;
            } elseif (is_string($object->getAgendaItem())) {
                $value_10 = $object->getAgendaItem();
            }
            $data['agendaItem'] = $value_10;
        }
        if (null !== $object->getConsultation()) {
            $value_12 = $object->getConsultation();
            if (is_array($object->getConsultation())) {
                $values_7 = [];
                foreach ($object->getConsultation() as $value_13) {
                    $values_7[] = $value_13;
                }
                $value_12 = $values_7;
            } elseif (is_string($object->getConsultation())) {
                $value_12 = $object->getConsultation();
            }
            $data['consultation'] = $value_12;
        }
        if (null !== $object->getFile()) {
            $value_14 = $object->getFile();
            if (is_array($object->getFile())) {
                $values_8 = [];
                foreach ($object->getFile() as $value_15) {
                    $values_8[] = $value_15;
                }
                $value_14 = $values_8;
            } elseif (is_string($object->getFile())) {
                $value_14 = $object->getFile();
            }
            $data['file'] = $value_14;
        }
        if (null !== $object->getLocationList()) {
            $value_16 = $object->getLocationList();
            if (is_array($object->getLocationList())) {
                $values_9 = [];
                foreach ($object->getLocationList() as $value_17) {
                    $values_9[] = $value_17;
                }
                $value_16 = $values_9;
            } elseif (is_string($object->getLocationList())) {
                $value_16 = $object->getLocationList();
            }
            $data['locationList'] = $value_16;
        }
        if (null !== $object->getLegislativeTermList()) {
            $value_18 = $object->getLegislativeTermList();
            if (is_array($object->getLegislativeTermList())) {
                $values_10 = [];
                foreach ($object->getLegislativeTermList() as $value_19) {
                    $values_10[] = $value_19;
                }
                $value_18 = $values_10;
            } elseif (is_string($object->getLegislativeTermList())) {
                $value_18 = $object->getLegislativeTermList();
            }
            $data['legislativeTermList'] = $value_18;
        }
        if (null !== $object->getMembership()) {
            $value_20 = $object->getMembership();
            if (is_array($object->getMembership())) {
                $values_11 = [];
                foreach ($object->getMembership() as $value_21) {
                    $values_11[] = $value_21;
                }
                $value_20 = $values_11;
            } elseif (is_string($object->getMembership())) {
                $value_20 = $object->getMembership();
            }
            $data['membership'] = $value_20;
        }
        if (null !== $object->getClassification()) {
            $data['classification'] = $object->getClassification();
        }
        if (null !== $object->getLocation()) {
            $data['location'] = $this->normalizer->normalize($object->getLocation(), 'json', $context);
        }
        if (null !== $object->getId()) {
            $data['id'] = $object->getId();
        }
        if (null !== $object->getName()) {
            $data['name'] = $object->getName();
        }
        $value_22 = $object->getShortName();
        if (is_string($object->getShortName())) {
            $value_22 = $object->getShortName();
        } elseif (is_null($object->getShortName())) {
            $value_22 = $object->getShortName();
        }
        $data['shortName'] = $value_22;
        $value_23 = $object->getLicense();
        if (is_string($object->getLicense())) {
            $value_23 = $object->getLicense();
        } elseif (is_null($object->getLicense())) {
            $value_23 = $object->getLicense();
        }
        $data['license'] = $value_23;
        if (null !== $object->getKeyword()) {
            $values_12 = [];
            foreach ($object->getKeyword() as $value_24) {
                $values_12[] = $value_24;
            }
            $data['keyword'] = $values_12;
        }
        $value_25 = $object->getWeb();
        if (is_string($object->getWeb())) {
            $value_25 = $object->getWeb();
        } elseif (is_null($object->getWeb())) {
            $value_25 = $object->getWeb();
        }
        $data['web'] = $value_25;
        if (null !== $object->getDeleted()) {
            $data['deleted'] = $object->getDeleted();
        }
        if (null !== $object->getCreated()) {
            $data['created'] = $object->getCreated()->format('Y-m-d\\TH:i:sP');
        }
        if (null !== $object->getModified()) {
            $data['modified'] = $object->getModified()->format('Y-m-d\\TH:i:sP');
        }

        return $data;
    }
}
